// –ø—Ä–∏–≤—ñ—Ç, —â–æ —Ç–∏ —Ç—É—Ç —à—É–∫–∞—î—à?
// –¥–ª—è —Ç–∞–∫–∏—Ö —è–∫ —Ç–∏, —Ü–µ–π –∫–æ–¥ –ø—Ä–æ–∫–æ–º–µ–Ω—Ç–æ–≤–∞–Ω–æ, —Ç–æ–º—É —á–∏—Ç–∞–π —Å–æ–±—ñ

// —Ç–µ–º–∞ —Å–∞–π—Ç—É
colorTheme = false;
var toggleColor = el => {
  colorTheme = !colorTheme;
  el.innerText = colorTheme ? '‚òÄÔ∏è' : 'üåô';
  // –∑–º—ñ–Ω–∞ —Ç–µ–º–∏ Bootstrap —ñ –∑–∞–¥–∞–≤–∞–Ω–Ω—è –∫—É–∫—ñ
  var themename = colorTheme ? 'light' : 'dark'
  document.documentElement.setAttribute('data-bs-theme', themename);
  Cookies.set('theme', themename);
  // –∑–º—ñ–Ω–∞ –∫–æ–ª—å–æ—Ä—É –∑–∞–≥–æ–ª–æ–≤–∫—É, –±–æ —è –∫–ª–∞–≤ –π–æ–º—É –∫–æ–ª—ñ—Ä –≤—Ä—É—á–Ω—É —ñ —Ç–µ–ø–µ—Ä –≤—ñ–Ω —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ –Ω–µ –º—ñ–Ω—è—î—Ç—å—Å—è
  $("#title").css("color", colorTheme ? "#000" : "#fff")
}

var themecookie = Cookies.get('theme');
if (themecookie == "light") {
  toggleColor(document.getElementById("colortoggler"));
}

var notranslation = false;
var langcookie = Cookies.get('lang');
if (langcookie) { // —è–∫—â–æ –∫—É–∫—ñ –ø–µ—Ä–µ–∫–ª–∞–¥—É –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Ç–æ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–µ—Ä–µ–∫–ª–∞–¥
  for (var key in enchants) enchants[key]["translation"] = enchants[key][langcookie];
  document.getElementById("langdisplay").innerHTML += langs[langcookie];
} else { // —ñ–Ω–∞–∫—à–µ –ø–∏—Ç–∞—î–º–æ –±–µ–∑ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
  notranslation = true;
  changeLang();
}

for (var langkey in langs) {
  // –¥–æ–¥–∞—î–º —Ä–∞–¥—ñ–æ –∫–Ω–æ–ø–∫–∏ –≤–∏–±–æ—Ä—É –º–æ–≤–∏ –≤ –º–µ–Ω—é
  $('#langchecks').append(`
<div class="form-check-inline">
  <label class="form-check-label">
    <input type="radio" class="form-check-input" name="languageselection" id="tr-${langkey}"> ${langs[langkey]}
  </label>
</div>
  `);
  if (!notranslation) { // —è–∫—â–æ –º–æ–≤–∞ —î —Ç–æ –æ–±–∏—Ä–∞—î–º–æ —ó—ó –≤ —Å–ø–∏—Å–∫—É —â–æ–± –≤–æ–Ω–∞ –≤–∏–≥–ª—è–¥–∞–ª–∞ –≤—ñ–¥–º—ñ—á–µ–Ω–æ—é
    if (langcookie == langkey) {
      document.getElementById("tr-" + langcookie).checked = true;
    }
  }
}
if (notranslation) {
  for(let i of document.getElementsByClassName("notshowonfirst")) {
    i.style.display = "none";
  }
}


// –≤–∫–ª/–≤–∏–∫–ª –º–µ–Ω—é –≤–∏–±–æ—Ä—É –º–æ–≤–∏
function changeLang(doClose=true) {
  if (!doClose) return;
  var el = document.getElementById("langseloverlay");
  var body = document.body;
  el.style.display = (el.style.display == "none") ? "flex" : "none";
  body.style.overflowY = (body.style.overflowY == "visible") ? "hidden" : "visible";
}

// –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –º–æ–≤—É
function setLang() {
  var selector = document.querySelector('input[name="languageselection"]:checked');
  if (selector) {
  if (notranslation || confirm("–¢–æ—á–Ω–æ –∑–º—ñ–Ω–∏—Ç–∏ –º–æ–≤—É? –Ø–∫—â–æ —â–æ—Å—å –±—É–ª–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ, —Ç–æ –≤–æ–Ω–æ –ø—Ä–æ–ø–∞–¥–µ (—Å—Ç–æ—Ä—ñ–Ω–∫–∞ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç—å—Å—è), –∑–∞ –≤–∏–Ω—è—Ç–∫–æ–º –ø–æ—Å–∏–ª–∞–Ω—å –∑ –∑–∞–¥–∞–Ω–∏–º–∏ –∑–∞—á–∞—Ä—É–≤–∞–Ω–Ω—è–º–∏ —Ç–∞ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º. –ó–º—ñ–Ω–∏—Ç–∏ –∑–Ω–æ–≤—É –º–æ–∂–Ω–∞ –ø–æ—Ä—è–¥ –∑ –≤–∏–±–æ—Ä–æ–º —Ç–µ–º–∏, –≤ –∫—É—Ç—ñ.")) {
      Cookies.set('lang', selector.id.slice(3));
      location.reload();
    }
  }
}

// —Å–ø–∏—Å–æ–∫ (—Å–ª–æ–≤–∞—Ä) –∑–∞—á–∞—Ä—ñ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç—ñ {"–∑–∞—á–∞—Ä": —Ä—ñ–≤–µ–Ω—å, ...}
var enchlist = {};

var curritem = ""; // –ø–æ—Ç–æ—á–Ω–∏–π –ø—Ä–µ–¥–º–µ—Ç
// —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏:
function calcPrice(enchlistfiltered) {
  var price = items[curritem]['base-price']; // –±–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
  for (const [name, level] of Object.entries(enchlistfiltered))
    // —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Å–ª–æ–≤–∞—Ä–∞ levelprices (–¥–∏–≤. itemdata.js)
    price += levelprices[enchants[name]['maxlevel']][level - 1];
  return price;
}
// –∑–º—ñ–Ω–∞ —Ü—ñ–Ω–∏, —è–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è
function updatePrice() {
  /* —è–∫—â–æ –∑–∞—á–∞—Ä –∫–Ω–∏–≥–∞, —Ç–æ —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —ñ–¥–µ –ø–æ —ñ–Ω—à–æ–º—É:
  –±–µ—Ä–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞—á–∞—Ä—ñ–≤ —è–∫—ñ –ø–æ–º—ñ—á–µ–Ω—ñ
  –¥–∏–≤–∏–º—Å—è –Ω–∞ –∫–æ–∂–µ–Ω –Ω–∞–±—ñ—Ä –º–æ–∂–ª–∏–≤–∏—Ö –∑–∞—á–∞—Ä—ñ–≤ –¥–ª—è –≤—Å—ñ—Ö –º–æ–∂–ª–∏–≤–∏—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
  –∑–Ω–∞—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ—Ç–∏–Ω —Ç–æ–≥–æ —â–æ –≤—ñ–¥–º—ñ—á–µ–Ω–æ —ñ —Ç–æ –Ω–∞ —â–æ –º–æ–∂–Ω–∞ –∑–∞—á–∞—Ä–∏—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –≤—Å—ñ—Ö –º–æ–∂–ª–∏–≤–∏—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤, —ñ –≤–∏—Ä–∞—Ö–æ–≤—î–º —Ü—ñ–Ω–∏ –¥–ª—è —Ü—å–æ–≥–æ
  —ñ –¥–∏–≤–∏–º—Å—è —è–∫–∞ –∑ —Ü–∏—Ö —Ü—ñ–Ω –Ω–∞–π–±—ñ–ª—å—à–∞
  —Ç–æ–±—Ç–æ —è–∫—É –Ω–∞–π–±—ñ–ª—å—à—É –ø–æ–ª—å–∑—É –º–æ–∂–Ω–∞ –≤–∏—Ç—è–≥–Ω—É—Ç–∏ –∑ –∫–Ω–∏–∂–∫–∏
  */
  if (curritem == "enchanted_book") {
    var maxprice = 0;
    for (const [name, data] of Object.entries(items)) {
      var newench = {};
      for (const [namee, level] of Object.entries(enchlist)) {
        if (name != "enchanted_book" && data['enchants'].includes(namee)) newench[namee] = level;
      }
      var tempprice = calcPrice(newench);
      if (tempprice > maxprice) maxprice = tempprice;
    }
    $("#priceout").text(maxprice + " –ì–ë");
  }
  // –Ω–æ—Ä–º–∞–ª—å–Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ü—ñ–Ω–∏
  else {
    $("#priceout").text(calcPrice(enchlist) + " –ì–ë");
  }
}
// –≤–≤—ñ–º–∫–Ω–µ–Ω–Ω—è –≥–∞–ª–æ—á–∫–∏ –∑ –∑–∞—á–∞—Ä–æ–º:
var enchantItem = el => {
  if (el.id.slice(2) in exclusiveenchants) {
    // –≤–∏–º–∫–Ω–µ–Ω–Ω—è / –≤–≤—ñ–º–∫–Ω–µ–Ω–Ω—è –Ω–µ—Å—É–º—ñ—Å–Ω–∏—Ö –∑–∞—á–∞—Ä—ñ–≤
    for (i of exclusiveenchants[el.id.slice(2)]) {
      $("#e_" + i).prop("disabled", el.checked);
      $("#e_" + i).parent().css('textDecoration', el.checked ? 'line-through' : 'none');
    }
  }
  // –¥–æ–¥–∞—î–º –∞–±–æ –∑–∞–±–∏—Ä–∞—î–º –∑–∞—á–∞—Ä –∑ —Å–ø–∏—Å–∫—É –∑–∞—á–∞—Ä—ñ–≤
  if (el.checked) enchlist[el.id.slice(2)] = enchants[el.id.slice(2)]['maxlevel'] == 1 ? 1 : parseInt($("#r_" + el.id.slice(2)).val());
  else delete enchlist[el.id.slice(2)];
  updatePrice();
}
// –æ–±–∏—Ä–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞
var chooseItem = name => {
  $("#bigimg").replaceWith(`<span class="inlineimg" id="bigimg" style="width: 24px; height: 24px; 
                                                           background-image: url('spritesheet.png'); 
                                                           background-position: -${(name=="shield"?1862.4:items[name]['sprite']*24)}px 0;
                                                           background-size: ${1048/(name=="shield"?40:16)*24}px;
                                                           transform: scale(${75/24});
                                                           margin: ${(75-24)/2}px"></span>`)
  $("#dropdowntext").text(items[name]['translation']);
  $("#enchcheck").empty()
  // –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≥–∞–ª–æ—á–æ–∫ –∑ –∑–∞—á–∞—Ä–∞–º–∏
  for (i of items[name]['enchants']) {
    // —è–∫—â–æ –ø–µ—Ä—à–∏–π —Ä—ñ–≤–µ–Ω—å —Ç–æ –±–µ–∑ —Å–ª–∞–π–¥–µ—Ä–∞
    if (enchants[i]['maxlevel'] == 1) $("#enchcheck").append(`
      <label class="form-check-label">
        <input class="form-check-input" type="checkbox" id="e_${i}" onclick="enchantItem(this)">
        &nbsp;${enchants[i]['translation']}
      </label>
    `);
    // —ñ–Ω–∞–∫—à–µ –∑ —Å–ª–∞–π–¥–µ—Ä–æ–º
    else $("#enchcheck").append(`
      <label class="form-check-label">
        <input class="form-check-input" type="checkbox" id="e_${i}" onclick="enchantItem(this)">
        &nbsp;${enchants[i]['translation']} 
        <span id="l_${i}">${levels[enchants[i]['maxlevel'] - 1]}</span>
        <input type="range" class="form-range" value="${enchants[i]['maxlevel']}" min="1" max="${enchants[i]['maxlevel']}" step="1" id="r_${i}" oninput="setLevel(this)">
      </label>
    `);
    // –ø–æ–∫–∞–∑ –ø–æ—è—Å–Ω–µ–Ω–Ω—è –∑ –∑–∞—á–∞—Ä –∫–Ω–∏–∂–∫–æ—é, —è–∫—â–æ –≤–∏–±—Ä–∞–Ω–∞ –∑–∞—á–∞—Ä –∫–Ω–∏–∂–∫–∞ —ñ –Ω–∞–≤–ø–∞–∫–∏
    if (name == "enchanted_book") $("#bookexpl").show();
    else $("#bookexpl").hide();
  }
  enchlist = {};
  curritem = name;
  updatePrice();
}
// –∫–æ–ª–∏ –∑–º—ñ–Ω—é—î—Ç—å—Å—è —Å–ª–∞–π–¥–µ—Ä –∑–∞—á–∞—Ä—É
var setLevel = el => {
  $("#l_" + el.id.slice(2)).text(levels[el.value - 1]);
  if (el.id.slice(2) in enchlist) {
    enchlist[el.id.slice(2)] = parseInt(el.value);
    updatePrice();
  }
}
// –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è
function copyLink() {
  var newdict = { "i": curritem };
  newdict['e'] = enchlist;
  navigator.clipboard.writeText("https://pricecalc.gummercraft.repl.co?data=" + encodeURIComponent(JSON.stringify(newdict))).then(
    () => alert('–°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ'),
    () => alert('–ù–µ –≤–¥–∞–ª–æ—Å—å —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏')
  );
}

// –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –≤ –≤–∏–±—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
for (const [name, data] of Object.entries(items)) {
  $("#itemslist").append(`
    <li>
      <a class="dropdown-item" href="#" onclick="chooseItem('${name}')">
        <span class="inlineimg" style="width: 24px; height: 24px; 
                                       background-image: url('spritesheet.png'); 
                                       background-position: -${(name=="shield"?1862.4:data['sprite']*24)}px 0;
                                       background-size: ${1048/(name=="shield"?40:16)*24}px;"></span>
        ${data['translation']}
      </a>
    </li>
  `);
}
// –±–µ—Ä–µ–º query –ø–∞—Ä–∞–º–µ—Ç—Ä –∑ —Å—Å–∏–ª–∫–∏ (–¥–ª—è –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö, —è–∫—ñ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –≤ —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ–º—É –ø–æ—Å–∏–ª–∞–Ω–Ω—ñ)
var querydata = new Proxy(new URLSearchParams(window.location.search), {
  get: (searchParams, prop) => searchParams.get(prop),
}).data;
// —è–∫—â–æ —Ç–∞–º —î —Ç—ñ –¥–∞–Ω—ñ
if (querydata) {
  querydata = JSON.parse(querydata);
  chooseItem(querydata.i);
  // –∫–ª—ñ–∫–∞—î–º –Ω–∞ –≤—Å—ñ –≥–∞–ª–æ—á–∫–∏ —ñ —Å—Ç–∞–≤–∏–º–æ –≤—Å—ñ —Å–ª–∞–π–¥–µ—Ä–∏
  for (const [name, level] of Object.entries(querydata.e)) {
    $('#e_' + name).trigger("click");
    if (enchants[name]["maxlevel"] != 1) {
      $('#r_' + name).val(level);
      $('#r_' + name).trigger("input");
    }
  }
} else {
  chooseItem("netherite_pickaxe"); // —ñ–Ω–∞–∫—à–µ –ø—Ä–æ—Å—Ç–æ –±–µ—Ä–µ–º –Ω–µ–∑–µ—Ä –∫–∏—Ä–∫—É
}

updatePrice();
